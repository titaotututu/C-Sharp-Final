<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxGoose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
  <data name="pbDelete.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAABfVJREFUeF7t
        nTGIXFUYhVOqlY0gqL2KqIhgIcI2UbQQLSwVLVzCsjszbxYstJnWxkZMoYEUJo2gS8A+hY1E0CaFi4Ig
        BtagjSiWeh6eZP95nt3cmX2z++6/54OvMHv+O3PuvZNsZtfNGWOMMcYYY4wxxhhjjDHGmExMJpNH4Cvj
        8fjtpmnehQ3++/XRaPTS1tbWfYyZTOCMn8Yhvwe/gf/cwS+R38BleJDjplbwKn8Bh3lZHHKJv2H+g+l0
        +gSXMzWBw7sgDnVZJ1zW1ADO63o4vL6ccXkzZHBQNzoH16dv8mHMEGn/zBaH1qt4jNf4cGZI4GBG6sBW
        IR7rGT6sGQKbm5sP42B+7R7UIX4Pr8D34SfwKvwFqqzyEh/aDAG8Ij8Vh6T8Ab7Isf+Bj22F7J08cB1z
        jOAg1joHc5AXOXIoyN0LvwtzB7nDEXOS4NX/kTicrucZL6Zpml2xzpzIPMe4OSlwEDe7B9PxKqMLgbkn
        ccB/d9aaE5fvAuPmJJhOpw+pg4niEN9ifGEw+7FaM3iNUXMS4BV4VhzKnKPR6DHGFwbrv6HWDP7IqDkJ
        cECb4lCiR3qFYv6pznpdf2fUtODVdg6bcg3+GTbJ9mP7FvcVbvXwKHg12p7klg8HfLJ0N57Yz90nalcj
        9vszbv0wwKv/cfVE7crc49YPg+3t7UfFk7Sr8wa3fhjMZrO78KT8R8DxObxPBv1J4PHJLR8e7btuuAjf
        4kn+1X3S9sjuDe6TP2OMMcYYY4wxxpgSJv99X377Ne5hf517RZzq/iis3uka7lucPaO6t/LDuWnfzlTl
        W0/DW52nvX97+/e6xYPD+jr3Cmg7djpH0/c/8Le/WzKWFtU5ylheVOkoY2lRnaOM5UWVjjKWFtU5ylhe
        VOkoY2lRnaOM5UWVjjK2EBsbG/ePx+MvMP8T/AN+Bdf44SMT1m//zt7+v4hLr4852fuWjOVFlY4yVsz6
        +vo9/C4ktd6zjC1N3+uLNeZkLC+qdJSxYjAz664RPPI7bFij1/XFGnMylhdVOspYMZj5vLtGtGmaBxhd
        Cqxx2I+cW/jv7WKNORnLiyodZawYzLQ/30euRY/0uYBYb07GilFrRBnLiyodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4
        AtSEKh1lrBjM+ALUhCodZawYzPgC1IQqHWWsGMz4AtSEKh1lrBjMnO+uEbzJ2NIc9tO94XXGihFrzMlY
        XlTpKGPF4IA21Dr0ImNL0/f6Yo05GcuLKh1lbCEwd6m7DvyaHz4yWKu39cU6czKWF1U6ytjCjMfjs6PR
        6BzWeAev2lf5y72BNZ/H2ltwgsd6mb+8MG3Hw2QsL6p0lLG0qM5RxvKiSkcZS4vqHGUsL6p0lLG0qM5R
        xvKiSkcZS4vqHGUsL6p0lLG0qM5RxvKiSkcZS4vqHGUsL6p0lLG0qM5RxvKiSkcZS4vqHGUsL6p0lLG0
        qM5RxvKiSkcZS4vqHGUsL6p0lLG0qM5RxvKiSndcS67qfFtuU15UabsvtykvqrTdl9uUF1Xa7sttyosq
        bfflNuUFJXe7pe1td7lNeWma5kNR3MJ2b7hNuUHZnW55O9nh9pwOULj9R5nbf/e3/b7+02y7BzNuizHG
        GGOMMcYYY4wxxhhjTI+cOfMvMO1BuUvIw+cAAAAASUVORK5CYII=
</value>
  </data>
</root>